name: Publish on DockerHub

on:
  push:
    tags:
      - '*'
  release:
    types: [published]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name:  Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          server-id: github

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
  publish_docker_images:
    needs: build
    runs-on: ubuntu-latest
    if: GitHub.ref == 'refs/heads/main' || GitHub.event_name == 'release'
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        
      - name: Get image version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
        
      - name: Check version
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=rrredbeard/kube-hello-app:latest
          cache-to: type=inline
          tags: rrredbeard/kube-hello-app:latest, rrredbeard/kube-hello-app:${{ steps.vars.outputs.tag }}
          
        
   
