
name: Publish on DockerHub

on:
  release:
    types:
      - created
    
jobs:
  build:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name:  Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          server-id: github

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
  publish_docker_images:
    needs: build
    runs-on: ubuntu-18.04
    env:
      # DockerHub
      DOCKER_HUB_REGISTRY: docker.io 
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USER }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      # GitHub
      GIT_HUB_REGISTRY: ghcr.io
      #GIT_HUB_USERNAME: 
      #GIT_HUB_PASSWORD:
      # Repo
      IMAGE_NAME: ${{ github.repository }} # <account>/<repo>
      IMAGE_TAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_HUB_REGISTRY }}
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/${{  }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          DH_IMAGE_NAME: ${{ env.DOCKER_HUB_REGISTRY }}/${{ env.IMAGE_NAME }}
          GH_IMAGE_NAME: ${{ env.GIT_HUB_REGISTRY }}/${{ env.IMAGE_NAME }}
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_NAME_EXT }}:latest
          cache-to: type=inline
          tags: ${{ env.IMAGE_NAME_EXT }}:latest, ${{ env.IMAGE_NAME_EXT }}:${{ TAG }}
          
        
   
